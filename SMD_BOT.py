import discord
import requests
import json
from json import JSONEncoder
import time
import os.path
import asyncio
import mysql.connector
from mysql.connector import connection
from mysql.connector import errorcode
from itertools import cycle
from random import randint
from urllib.request import Request, urlopen

insert_token = input("Please insert 1 token: ")
if insert_token == "":
    exit(1)


def randomText_Mention():
    Words = [":v:" ,"ü§î", "ÏïàÎÖïÌïòÏÑ∏Ïöî", "Î≠êÌï¥?", "üòÇ", "üí©", "üëç", "üëÄ", ":P", "üëç", "Hello", "Hi!", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ", "‡∏î‡∏µ‡∏à‡πâ‡∏≤", "How was your day", "‡∏ß‡πà‡∏≤‡πÑ‡∏á?", "‡∏≠‡∏∞‡πÑ‡∏£?", "‡πÑ‡∏°‡πà‡∏™‡∏ô", "‡∏≠‡∏¢‡πà‡∏≤‡∏°‡∏≤‡∏¢‡∏∏‡πà‡∏á", "‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô", "Leave me alone!!!!", "‡∏™‡∏ß‡∏¢", "‡πÄ‡∏£‡∏¥‡πà‡∏î‡∏°‡∏≤‡∏Å", "‡πÄ‡∏ä‡∏¥‡∏ç‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á", "‡∏≠‡πä‡∏≠‡∏¢‡∏´‡∏¢‡πã‡∏≠", "‡∏•‡∏≤‡∏≠‡∏≠‡∏Å!", "‡πÑ‡∏°‡πà‡∏≠‡πà‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö ‡πÑ‡∏°‡πà‡∏™‡∏ô...", ";w;", "=A=!", "- -*", "‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏á?"
            ,"https://giphy.com/gifs/sad-cry-capoo-3og0IG0skAiznZQLde", "https://giphy.com/stickers/cat-pearl-capoo-TFUhSMPFJG7fPAiLpQ", "https://giphy.com/gifs/happy-rainbow-capoo-XEgmzMLDhFQAga8umN", "https://giphy.com/gifs/cat-color-capoo-dYZxsY7JIMSy2Afy6e", "‡∏£‡∏∞‡πÄ‡∏ö‡∏¥‡∏î‡πÄ‡∏ß‡∏•‡∏≤......**‡∏≠‡πä‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤**"
            , "‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå", "**How Dare You!!??**", "‡πÅ‡∏´‡∏∞ ‡πÜ", "=[]=", "‡∏°‡∏±‡πà‡∏¢‡∏ô‡πä‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤‡∏≤","‡∏´‡∏£‡∏≠‡∏°‡∏°‡∏°‡∏°‡∏°‡∏° ‡πÜ","‡∏ä‡∏±‡πà‡∏¢‡∏ä‡∏±‡πà‡∏¢‡∏ä‡∏±‡πà‡∏¢","‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏£‡∏π‡πâ ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏£‡∏π‡πâ ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó‡∏Ñ‡πà‡∏∞ ‡∏ö‡∏≠‡∏ó‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏≠‡∏¥‡∏™‡∏£‡∏∞ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡∏ï‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏™‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏∞","‡∏™‡∏≤‡∏¢‡∏´‡∏¢‡∏∏--...‡∏≠‡∏∏‡πä‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡∏™‡πâ‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î‡∏î","‡∏°‡πà‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢","‡∏ä‡πà‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢","‡πÅ‡∏ï‡πä‡∏á‡∏Å‡∏¥‡πâ‡∏ß‡∏ó‡∏µ‡πÄ‡∏ä‡∏≠‡∏£‡πå"
            ,"‡∏ã‡∏¥‡∏ó‡∏î‡∏≤‡∏ß‡∏û‡∏•‡∏µ‡∏™","‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏°‡∏≤‡∏≤!!","‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏ß‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô","‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏ô‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô","https://soundcloud.com/wearesmd/no-food","https://soundcloud.com/wearesmd/no-shoe","*‡πÄ‡∏ô‡πä‡∏≤‡∏∞‡∏•‡∏π‡∏Å‡πÄ‡∏ô‡πä‡∏≤‡∏∞* -- **‡∏ß‡∏±‡∏ä‡∏£‡∏≤‡∏†‡∏£‡∏ì‡πå ‡∏¢‡∏∑‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï**","*‡πÄ‡∏Å‡πà‡∏á‡πÅ‡∏ó‡πâ‡πÅ‡∏°‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£* -- **‡∏™‡∏≥‡∏£‡∏ß‡∏ç ‡∏ä‡∏¥‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏∂‡∏Å**","*‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡∏±‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö ‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏û‡∏û‡∏û‡∏û‡∏û* -- **‡πÑ‡∏û‡∏ó‡∏π‡∏• ‡∏ô‡∏≤‡∏£‡∏Ñ‡∏£**"
            ,"*‡πÄ‡∏ò‡∏≠‡πÑ‡∏°‡πà‡∏≠‡∏¥‡∏ô‡πÑ‡∏á* -- **‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏´‡∏±‡∏™‡∏°‡∏¥‡∏ô‡∏ó‡∏£‡πå**", "*‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ä‡∏µ‡∏ß‡∏∞ ‡∏Ñ‡∏∑‡∏≠‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï* -- **‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏£‡∏ì ‡πÄ‡∏≠‡∏µ‡πà‡∏¢‡∏°‡∏™‡∏≥‡∏≠‡∏≤‡∏á‡∏Ñ‡πå**", "OMG","‡∏°‡∏£‡∏µ‡∏õ‡∏±‡∏ì‡∏´‡∏≤‡∏£‡πå‡∏≠‡∏£‡∏∞‡πÑ‡∏•‡∏´‡πå‡∏´‡∏£‡πà‡∏≠‡∏™‡πå","‡∏Ç‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏µ‡∏Å‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô...","‡∏Ç‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏µ‡∏Å‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô...*‡πÅ‡∏Ñ‡πä‡∏Å ‡πÜ 6 ‡∏õ‡∏µ‡πÅ‡∏•‡πâ‡∏ß*","‡πÅ‡∏õ‡∏õ ‡πÜ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á","‡∏≠‡∏∏‡πÅ‡∏á‡∏á‡∏á‡∏á","‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ","‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ","‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Å‡∏î‡πÇ‡∏Å‡∏£‡∏ò :angry: ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ","‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Å‡∏î‡πÄ‡∏•‡∏¥‡∏ü :heart: ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ","‡∏ñ‡∏∂‡∏á‡πÇ‡∏Ñ‡∏ß‡∏¥‡∏î‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏¥‡∏î ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏î‡∏¥‡∏™‡πÑ‡∏ß‡πâ‡πÅ‡∏Å‡πâ‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Å‡∏±‡∏ô"
            ,":notes: ‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ô‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà~",":notes: ‡πÄ‡∏î‡πá‡∏Å‡πÄ‡∏≠‡πã‡∏¢‡πÄ‡∏î‡πá‡∏Å‡∏î‡∏µ~",":notes: ‡∏°‡∏≠‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á ‡∏á‡∏≤‡∏°‡πÄ‡∏î‡πà‡∏ô‡∏™‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏á‡πà‡∏≤~",":notes: ‡∏î‡∏±‡πà‡∏á‡πÑ‡∏°‡πâ‡∏¢‡∏∑‡∏ô‡∏ï‡πâ‡∏ô~",":notes: ‡πÄ‡∏•‡∏ó‡∏Ñ‡∏¥‡∏•‡∏ö‡∏∏‡∏£‡∏µ‡πà~!","‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô 9xx ‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô 9-- ‡πÅ‡∏Ñ‡πä‡∏Å ‡πÜ ‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö!!","‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏â‡∏≤‡∏õ‡πÅ‡∏Å","‡∏°‡∏∞‡∏á‡∏∑‡πâ‡∏≠‡∏≠‡∏≠‡∏≠‡∏≠‡∏≠","‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏∑‡πä‡∏≠...... ‡∏î‡∏≤‡∏ß‡∏°‡∏µ‡πÑ‡∏ß‡πâ‡πÄ‡∏ö‡∏¥‡πà‡∏á~~",":notes: ‡∏à‡∏≤‡∏Å‡∏≠‡∏µ‡∏™‡∏≤‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏≤‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏£‡∏∏‡∏á ‡∏à‡∏≤‡∏Å‡πÅ‡∏î‡∏ô‡∏ó‡∏∏‡πà‡∏á‡∏•‡∏≤‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢‡∏¢~",":notes: ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á‡∏Ñ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ù‡∏∏‡πà‡∏ô‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ *‡∏û‡∏¥‡∏™‡∏π‡∏ï‡∏£*‡∏î‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏û‡πâ"
            ,"‡πÅ‡∏ó‡∏á‡∏õ‡∏•‡∏≤‡πÑ‡∏´‡∏• 20 ‡∏¢‡∏Å!","SMD ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞","‡∏û‡∏¥‡∏®‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á‡∏ß‡∏á","‡∏û‡∏ß‡∏Å‡πÄ‡∏£‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å...‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô ‡∏°‡∏≠‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á [‡∏≠‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö SciShow ‡∏ô‡∏∞]", "**S TO THE A TO THE T I T TO THE SMD TO THE SMD... BOOM!**","‡∏ô‡∏±‡πà‡∏ô‡∏™‡∏¥","‡∏≠‡∏¥‡∏´‡∏¢‡∏±‡∏á‡∏ß‡∏∞","‡πÄ‡∏Æ‡πá‡∏î‡∏´‡∏¢‡∏±‡∏á‡∏´‡∏ô‡∏¥‡∏™‡∏π","‡∏™‡∏π‡∏Å‡∏∞‡∏î‡∏≤‡∏¢", "‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏µ‡πà‡∏¢!?", "‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡∏ú‡∏°‡∏á‡∏á‡πÑ‡∏õ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß","10 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ï‡πá‡∏° 10 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°‡∏°!","‡πÅ‡∏°‡∏™‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞","‡∏õ‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏¢‡∏∏‡∏î","‡∏õ‡∏±‡∏á‡∏°‡∏≤‡∏Å‡πÅ‡∏°‡πà","‡∏õ‡∏±‡∏á‡∏°‡∏≤‡∏Å"]
    return Words[randint(0, len(Words)-1)]


def randomText_Hello():
    Words = ["‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡πÄ‡∏à‡πâ‡∏≤", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞", "‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ", "Annyeonghaseyo", "Kon'nichiwa", "Hello", "–ø—Ä–∏–≤–µ—Ç!", "‡∏ß‡πà‡∏≤‡πÑ‡∏á", ";w;?",
             "Meow Meooww?", ":wave:", "https://giphy.com/gifs/capoo-halloween-3ov9k0OmfNYeLdK4gg", "N«ê h«éo", "‡∏ß‡∏≠‡∏• ‡∏ó‡∏µ ‡∏ó‡∏µ ‡∏ß‡∏≠‡∏• ‡∏ó‡∏µ", "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡πä‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö‡∏ö!"]
    return Words[randint(0, len(Words)-1)] + " {0.author.mention}"

class MyClient(discord.Client):
    async def on_ready(self):
        print('\nLogged in as ' + self.user.name +
              " (" + str(self.user.id) + ")\n------")
        await client.change_presence(activity=discord.Game(name='‡∏£‡∏≠‡πÄ‡∏î‡πá‡∏Å‡∏°‡∏≤‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'))

    async def on_message(self, message):
        if message.content.startswith('/hello'):
            await message.channel.send(randomText_Hello().format(message))
        if message.content.startswith('/help') or message.content.startswith('!help'):
            em = discord.Embed(title="‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÑ‡∏î‡πâ",
                               description="‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞")
            em.add_field(name="/help", value="‡∏Å‡πá‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏´‡∏•‡∏∞")
            em.add_field(name="/hello", value="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ñ‡∏ô‡πÄ‡∏´‡∏á‡∏≤")
            em.add_field(name="/verify", value="‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô")
            await message.channel.send(content=None, embed=em)

        if message.content.startswith('/testverify'):
            mess_input = message
            user_id = str(message.author.id)
            text = message.content[len('/testverify'):].split()
            std_id = text[0]
            std_firstname = text[1]
            std_lastname = text[2]

            response = requests.get("https://smd.pondja.com/api/student")
            print("GET `https://smd.pondja.com/api/student`")
            await client.get_channel(701042885931565156).send("GET `https://smd.pondja.com/api/student`")

            if response.status_code != 200:
                message.channel.send(
                    '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö')

            checkId = int(std_id)

            if (checkId > 610000):

                Con = response.json()

                if std_id not in Con["std"]:
                    await message.channel.send('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô `' + std_id + "`")
                    print("RES not_found")
                    await client.get_channel(701042885931565156).send("RES `not_found`")
                else:
                    api_res_id = Con["std"][std_id][0]["id"]
                    api_res_prefix = Con["std"][std_id][0]["prefix"]
                    api_res_firstname = Con["std"][std_id][0]["firstname"]
                    api_res_lastname = Con["std"][std_id][0]["lastname"]
                    api_res_grade = Con["std"][std_id][0]["grade"]
                    api_res_class = Con["std"][std_id][0]["class"]

                    await message.channel.send("USER: `" + user_id + " (" + message.author.display_name + ")`\n‡∏ä‡∏∑‡πà‡∏≠: `" + api_res_firstname + "`\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: `" + api_res_lastname + "`\n‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: `" + api_res_grade + "/" + api_res_class + "`")
                    await message.channel.send("INPUT:\n id: `" + text[0] + "` | `" + api_res_id + "`\n firstname: `" + text[1] + "` | `" + api_res_firstname + "`\n lastname: `" + text[2] + "` | `" + api_res_lastname)

                    # Data Match
                    if (api_res_firstname == std_firstname and api_res_lastname == std_lastname):
                        await message.channel.send("Status: :white_check_mark:")
                    else:
                        await message.channel.send("Status: :x:")
                    print("RES " + str(Con["std"][std_id][0]))
                    await client.get_channel(701042885931565156).send("RES `" + str(Con["std"][std_id][0]) + "`")
            else:
                await message.channel.send("USER: `" + user_id + " (" + message.author.display_name + ")`\n‡∏ä‡∏∑‡πà‡∏≠: `" + std_firstname + "`\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: `" + std_lastname + "`\n‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: `‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤`")
                await message.channel.send("Status: :white_check_mark:")

        if message.content.startswith('/checkid'):
            mess_input = message
            user_id = str(message.author.id)
            text = message.content[len('/checkid'):].split()
            std_id = text[0]

            response = requests.get("https://smd.pondja.com/api/student")
            print("GET `https://smd.pondja.com/api/student`")
            await client.get_channel(701042885931565156).send("GET `https://smd.pondja.com/api/student`")

            if response.status_code != 200:
                message.channel.send(
                    '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö')
            
            checkId = int(std_id)

            if (checkId > 610000):

                Con = response.json()

                if std_id not in Con["std"]:
                    await message.channel.send('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô `' + std_id + "`")
                    print("RES not_found")
                    await client.get_channel(701042885931565156).send("RES `not_found`")

                else:
                    api_res_id = Con["std"][std_id][0]["id"]
                    api_res_prefix = Con["std"][std_id][0]["prefix"]
                    api_res_firstname = Con["std"][std_id][0]["firstname"]
                    api_res_lastname = Con["std"][std_id][0]["lastname"]
                    api_res_grade = Con["std"][std_id][0]["grade"]
                    api_res_class = Con["std"][std_id][0]["class"]

                    await message.channel.send("Response: \n‡∏ä‡∏∑‡πà‡∏≠: `" + api_res_firstname + "`\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: `" + api_res_lastname + "`\n‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: `" + api_res_grade + "/" + api_res_class + "`")
                    print("RES " + str(Con["std"][std_id][0]))
                    await client.get_channel(701042885931565156).send("RES `" + str(Con["std"][std_id][0]) + "`")
            else:
                await message.channel.send("Response: \n`‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤`")

        if message.content.startswith('/verify'):
            mess_input = message
            user_id = str(message.author.id)
            text = message.content[len('/verify'):].split()
            std_id = text[0]
            std_firstname = text[1]
            std_lastname = text[2]

            response = requests.get("https://smd.pondja.com/api/student")
            print("GET `https://smd.pondja.com/api/student`")
            await client.get_channel(701042885931565156).send("GET `https://smd.pondja.com/api/student`")
            if response.status_code != 200:
                message.channel.send(
                    '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö')

            checkId = int(std_id)

            if (checkId > 610000):

                Con = response.json()

                if std_id not in Con["std"]:
                    await message.channel.send('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô `' + std_id + "`")
                    print("RES not_found")
                    await client.get_channel(701042885931565156).send("RES `not_found`")

                else:
                    api_res_id = Con["std"][std_id][0]["id"]
                    api_res_prefix = Con["std"][std_id][0]["prefix"]
                    api_res_firstname = Con["std"][std_id][0]["firstname"]
                    api_res_lastname = Con["std"][std_id][0]["lastname"]
                    api_res_grade = Con["std"][std_id][0]["grade"]
                    api_res_class = Con["std"][std_id][0]["class"]

                    await message.channel.send("USER: `" + user_id + " (" + message.author.display_name + ")`\n‡∏ä‡∏∑‡πà‡∏≠: `" + api_res_firstname + "`\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: `" + api_res_lastname + "`\n‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: `" + api_res_grade + "/" + api_res_class + "`")

                    # Data Match
                    if (api_res_firstname == std_firstname and api_res_lastname == std_lastname):
                        role = discord.utils.get(
                            message.author.guild.roles, name=api_res_grade + "/" + api_res_class)
                        role2 = discord.utils.get(
                            message.author.guild.roles, name="M:" + api_res_grade)
                        role3 = discord.utils.get(
                            message.author.guild.roles, name="Student")
                        # await message.author.add_roles(abc.+)

                        cnx = mysql.connector.connect(user='pondjaco', password='11032545', host='p0nd.ga', database='pondjaco_smdkku')
                        cursor = cnx.cursor()

                        query_func = ("UPDATE `std_2563_discordDB` SET `discord_user_id` = %s WHERE `id` = %s")
                        data_query = (message.author.id, text[0])

                        # Insert new employee
                        cursor.execute(query_func, data_query)
                    
                        # Make sure data is committed to the database
                        cnx.commit()

                        cursor.close()
                        cnx.close()
                        
                        await message.author.edit(roles=[role, role2, role3])
                        await message.author.edit(nick=api_res_prefix + " " + api_res_firstname + " " + api_res_lastname)
                        await message.channel.send("Status: :white_check_mark:")
                        # await message.author.change_nickname(api_res_prefix + " " + api_res_firstname + " " + api_res_lastname)

                        print("new verify member: " + std_id)
                        await client.get_channel(701042885931565156).send("new verify member: `" + std_id + "`")
                    else:
                        await message.channel.send("Status: :x:")
                    print("RES " + str(Con["std"][std_id][0]))
                    await client.get_channel(701042885931565156).send("RES `" + str(Con["std"][std_id][0]) + "`")

            else:
                await message.channel.send("USER: `" + user_id + " (" + message.author.display_name + ")`\n‡∏ä‡∏∑‡πà‡∏≠: `" + std_firstname + "`\n‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•: `" + std_lastname + "`\n‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: `‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤`")
                await message.channel.send("Status: :white_check_mark:")
                role = discord.utils.get(
                    message.author.guild.roles, name="‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤")
                role2 = discord.utils.get(
                    message.author.guild.roles, name="Student")
                await message.author.edit(roles=[role, role2])

        if message.content.startswith('/announce'):
            Mes_Str = message.content[len('/announce')+1:]
            channel = client.get_channel(700718680333615154)
            await message.delete()
            await channel.send("@everyone\n"+Mes_Str)

        if message.content.startswith('/update'):
            Mes_Str = message.content[len('/update')+1:]
            channel = client.get_channel(700875375651192832)
            await message.delete()
            await channel.send("@everyone\n"+Mes_Str)

        if message.content.startswith('say('):
            Str_Content = message.content
            await message.delete()
            # Say(4412) ‡πÑ‡∏≠‡πâ‡∏ô‡∏µ‡πâ‡∏°‡∏±‡∏ô‡∏≠‡∏π‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö‡∏ö
            Id_channel = Str_Content.find("(")

            for i in range(1, 40):
                if Str_Content[Id_channel+i] == ")":
                    channel = client.get_channel(
                        int(Str_Content[Id_channel+1:Id_channel+i]))
                    await channel.send(Str_Content[Id_channel+i+2:])
                    break

        for Mem in message.mentions:
            if self.user.name == Mem.display_name:
                
                await message.channel.send(randomText_Mention().format(message))
                break

    async def on_guild_join(guild):
        await guild.system_channel.send("‡∏Å‡∏£‡∏≤‡∏ö‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö")

    async def on_member_join(self, member):
        guild = member.guild
        if guild.system_channel is not None:
            to_send = '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡πÄ‡∏à‡πâ‡∏≤ {0.mention} ‡∏™‡∏π‡πà {1.name}!\n‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏≠‡πà‡∏≤‡∏ô #‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÉ‡∏ô #verify-member ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö !'.format(
                member, guild)
            await guild.system_channel.send(to_send)

    async def on_member_remove(self, member):
        guild = member.guild
        if guild.system_channel is not None:
            to_send = '‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢ {0.mention}!'.format(member)
            await guild.system_channel.send(to_send)

    async def announcements(Con):
        channel = client.get_channel(700718680333615154)
        await channel.send(Con)


client = MyClient()
client.run(insert_token)
